dataset_definition:
  # Define the global attributes in your output xarray Dataset
  attributes:
    title: Buoy Dataset for Buoy \#120
    description: Example ingest dataset.
    conventions: MHKiT-Cloud Data Standards v. 1.0
    history:
    doi: 10.21947/1671051
    institution: PNNL
    code_url: https://github.com/clansing/tsdat/releases/tag/1.0
    references:
    input_files:
    location_id: humboldt_z05
    datastream: humboldt_z05.lidar_buoy_10m.b1
    data_level: b1
    location_description: Buoy is located of the coast of Humboldt, CA
    instrument_name: Wind Sentinel
    serial_number: '000011312'
    instrument_description: Self-powered floating buoy hosting a suite of meteorological and marine instruments.
    instrument_manufacturer: AXYS Technologies Inc.
    sampling_interval: 10 min

  # Define the dimensions/coordinates in your output xarray Dataset
  dimensions:
    time:
        length: unlimited

  # Define the variables in your output xarray Dataset
  variables:
    time:
      input:
        name: DataTimeStamp(DateTime)
        
        # Use the StringTimeConverter if your input time is a formatted string
        converter: 
          classname: tsdat.utils.converters.StringTimeConverter
          parameters:
            # A list of timezones can be found here:
            # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
            timezone: US/Pacific
            time_format: "%Y-%m-%d %H:%M:%S"
            
        # Use the TimestampTimeConverter if your input time is a numeric UTC timestamp
        # converter: 
        #   classname: tsdat.utils.converters.TimestampTimeConverter
        #   parameters:
        #     # Unit of the numeric value as used by pandas.to_datetime (D,s,ms,us,ns)
        #     unit: s
        
      dims: [time]
      type: long
      attrs:
        long_name: Time offset from epoch
        standard_name: time
        # Note:  CF Standards require this exact format:
        # https://cfconventions.org/Data/cf-conventions/cf-conventions-1.7/build/ch04s04.html
        units: seconds since 1970-01-01T00:00:00

    temp_mean:
      input:
        name: ValueAverage(Double)
        units: degC
        converter:
          classname: tsdat.utils.converters.DefaultConverter
          # parameters:
      dims: [time]
      type: double
      attrs:
        long_name: Mean temperature
        description: Rolling 10-minute average sea surface temperature. Aligned such that the temperature reported at time 'n' represents the average across the interval (n-1, n].
        units: degC
        valid_delta: 0.25
        valid_range: [-50, 50]
        _FillValue: -9999

    temp_min:
      input:
        name: ValueMin(Double)
        units: degC
        converter: 
          classname: tsdat.utils.converters.DefaultConverter
          # parameters:
      dims: [time]
      type: double
      attrs:
        long_name: Minimum temperature
        units: degC
        valid_delta: 0.25
        valid_range: [-50, 50]
        _FillValue: -9999

    temp_max:
      input:
        name: ValueMax(Double)
        units: degC
        converter: 
          classname: tsdat.utils.converters.DefaultConverter
          # parameters:
      dims: [time]
      type: double
      attrs:
        long_name: Maximum temperature
        units: degC
        valid_delta: 0.25
        valid_range: [-50, 50]
        _FillValue: -9999

    temp_stddev:
      input:
        name: ValueSD(Double)
        units: degC
        converter: 
          classname: tsdat.utils.converters.DefaultConverter
          # parameters:
      dims: [time]
      type: double
      attrs:
        long_name: Standard deviation of temperature
        units: degC
        valid_delta: 0.25
        valid_range: [0, 5]
        _FillValue: -9999

    temp_mean_30min:
      # Example of a variable that gets created in code, it would have no input
      dims: [time]
      type: double
      attrs:
        long_name: Mean temperature (30 min)
        description: 30-minute rolling average of temp_mean computed using a sliding window of length 3 and converted to degrees Fahrenheit.
        units: degF
        valid_delta: 1
        valid_range: [-58, 122]
        _FillValue: -9999

    life:
      # Example of a constant variable whose value is defined here
      type: int
      data: 42
      attrs:
        long_name: The answer is...
        description: But what is the question?

---
qc_tests:
    #  In general, a user should not specify tests for coordinate variables
    # (e.g., time) because the pipeline will perform coordinate variable validation
    # before the qc tests are run.  Any failures in coordinate variables will
    # cause the dataset to be unusable, and result in a critical pipeline failure.
    missing:
        qc_bit: 1
        description: "Value is equal to _FillValue or NaN"
        assessment: Bad
        variables:
          - ALL  # keyword to apply test to all variables
        operator:
          classname: tsdat.qc.operators.CheckMissing

    fail_min:
        qc_bit: 2
        description: "Value is less than the fail_range."
        assessment: Bad
        variables:
          - ALL
        operator:
          classname: tsdat.qc.operators.CheckFailMin

    fail_max:
        qc_bit: 3
        description: "Value is greater than the fail_range."
        assessment: Bad
        variables:
          - ALL
        operator:
          classname: tsdat.qc.operators.CheckFailMax

    warn_min:
        qc_bit: 4
        description: "Value is less than the warn_range."
        assessment: Indeterminate
        variables:
          - ALL
        operator:
          classname: tsdat.qc.operators.CheckWarnMin

    warn_max:
        qc_bit: 5
        description: "Value is greater than the warn_range."
        assessment: Indeterminate
        variables:
          - ALL
        operator:
          classname: tsdat.qc.operators.CheckWarnMax

    valid_delta:
        qc_bit: 6
        description: "Difference between current and previous values exceeds valid_delta."
        assessment: Indeterminate
        variables:
          - ALL
        operator:
          classname: tsdat.qc.operators.CheckValidDelta
          parameters:
            dim: time

        error_handlers: # Can list multiple error handlers if needed - executed in sequence
          send_email:
            classname: tsdat.qc.error_handlers.SendEmailAWS
            parameters:
              message:
              recipients: [carina.lansing@pnnl.gov, maxwell.levin@pnnl.gov]

