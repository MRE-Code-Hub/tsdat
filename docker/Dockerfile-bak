#---------------------------------------------
# Dockerfile to pre-package tsdat requirements
# for lambda container.  We use a multistage
# build so that we can have the dev dependencies
# installed that are needed to install cartopy,
# but they won't be included in the final image.
#
# Based on example here:
# https://github.com/rraffert/ml_lambda_container/blob/f52bba0d87b5b3601c8622cd4e7dc0d8d69761d8/Dockerfile
#---------------------------------------------
# Directory where code is deployed.  This folder
# is included in the PYTHONPATH in the aws base
# image
ARG FUNCTION_DIR="/var/task/"

# This is the build image - only the FUNCTION_DIR
# will get copied to the final image
FROM registry.gitlab.com/gov-doe-arm/docker/arm-dev7:latest as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Create code directory
RUN mkdir -p ${FUNCTION_DIR}

# Install the tsdat packages
RUN pip install \
        --target ${FUNCTION_DIR} \
        act-atmos \
        cfunits \
        yamllint

# Multi-stage build: grab a fresh copy of the base image
FROM public.ecr.aws/lambda/python:3.8

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the build image dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}


